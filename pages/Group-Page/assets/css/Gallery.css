/* Gallery styling */

/* The css styling used for the Gallery page. */

/* Add custom gallery page styling. */

/* Toggle Button styling. https://www.w3schools.com/howto/howto_css_switch.asp */

/* The switch - the box around the slider */
.switch {
    position: relative;
    display: inline-block;
    width: 3.75rem;
    height: 2rem;
}
  
/* Hide default HTML checkbox */
.switch input {
    opacity: 0;
    width: 0;
    height: 0;
}
  
/* The slider */
.slider {
    /* Note that color is controlled by theme, so look at the CSS theme sheets. */
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    -webkit-transition: .4s;
    transition: .4s;
}
  
.slider:before {
    /* Note that color is controlled by theme, so look at the CSS theme sheets. */
    position: absolute;
    content: "";
    height: 1.6rem;
    width: 1.6rem;
    left: 0.25rem;
    bottom: 0.2rem;
    -webkit-transition: .4s;
    transition: .4s;
}
  
input:checked + .slider {
    /* Note that color is controlled by theme, so look at the CSS theme sheets. */
    font-size: inherit;
}
  
input:focus + .slider {
    /* Note that color is controlled by theme, so look at the CSS theme sheets. */
    font-size: inherit;
}
  
input:checked + .slider:before {
    -webkit-transform: translateX(26px);
    -ms-transform: translateX(26px);
    transform: translateX(26px);
}
  
/* Rounded sliders */
.slider.round {
    border-radius: 2rem;
}
  
.slider.round:before {
    border-radius: 50%;
}

/* Album cover styling. */

.album-covers-container {
    /* background-color: burlywood; */
    height: max-content;
    width: 100%;
    margin: auto;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    align-content: center;
    /* overflow: auto; */
}

.gallery-cover-container {
    /* background: linear-gradient(0deg, #00000088 30%, #ffffff44 100%); */
    /* background-color: purple; */
    height: var(--gallery-image-height);
    width: var(--gallery-image-height);
    margin: 0.3rem;
    cursor: pointer;
    position: relative; /* This parent needs to be relative to give it a position in the document flow, so that it's children items can be set as position: absolute. */
}

.gallery-cover-text {
    /* Note that color is controlled by theme, so look at the CSS theme sheets. */
    font-size: 0.8rem;
    text-transform: uppercase;
    text-align: right;
    margin-top: 6.25rem; /* Controls the height of the text down the picture. */
    padding: 0.5em;
    position: relative;
}

.gallery-cover-image {
    /* background: linear-gradient(0deg, #00000088 30%, #ffffff44 100%); */
    /* background-color: red; */
    height: var(--gallery-image-height);
    width: var(--gallery-image-height);
    object-fit:cover; /* This crops the picture to the defined height and width. https://reactgo.com/css-crop-images/. */
    /* margin: auto; */
    position: absolute; /* By making this position absolute (and having its parent as relative), we're defining this item to have position absolute in relation to its parent. */
    top: 0rem;
    left: 0rem;
    z-index: -1;
    /* Find a way to add a filter over the top of these gallery images to make the text easier to read. */
}